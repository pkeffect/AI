### Open-WebUI-Dev-Cuda | Postgres | ChromaDB | Adminer | PgAdmin###
### This file assumes that Ollama is installed locally and not in Docker ###
### Volumes for this file are stored locally as well ###
### OpenWebUI : Browser Based Model Interface ###

services:
  openwebui-dev-cuda:
    image: ghcr.io/open-webui/open-webui:dev-cuda
    container_name: openwebui-dev-cuda
### If you need to change the port, change 3000 ###    
    ports:
      - "3000:8080"
### This is local. To switch to Docker Volume remove ./. ###
### Your data will not copy over unless you use Docker cp commands ###      
    volumes:
      - ./.openwebui-data:/app/backend/data
      - ./.openwebui-data/config.json:/app/backend/data/config.json  
      - ./.openwebui-data/litellm/config.yaml:/app/backend/data/litellm/config.yaml       
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities:
                - gpu      
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - postgres
      - chromadb
    environment:
### DO NOT TRACK ###
      - 'SCARF_NO_ANALYTICS=${SCARF_NO_ANALYTICS}'
      - 'DO_NOT_TRACK=${DO_NOT_TRACK}'
      - 'ANONYMIZED_TELEMETRY=${ANONYMIZED_TELEMETRY}'
### Use locally bundled version of the LiteLLM cost map json ###
### to avoid repetitive startup connections ###
      - 'LITELLM_LOCAL_MODEL_COST_MAP=${LITELLM_LOCAL_MODEL_COST_MAP}'
### GENERAL ###
#     - 'WEBUI_AUTH=${WEBUI_AUTH}'
#     - 'WEBUI_NAME=${WEBUI_NAME}'
#     - 'WEBUI_URL=${WEBUI_URL}'
#     - 'DATA_DIR=${DATA_DIR}'
#     - 'FRONTEND_BUILD_DIR=${FRONTEND_BUILD_DIR}'
#     - 'STATIC_DIR=${STATIC_DIR}'
#     - 'CUSTOM_NAME=${CUSTOM_NAME}'
#     - 'ENABLE_SIGNUP=${ENABLE_SIGNUP}'
#     - 'DEFAULT_MODELS=${DEFAULT_MODELS}'
#     - 'DEFAULT_USER_ROLE=${DEFAULT_USER_ROLE}'
#     - 'USER_PERMISSIONS_CHAT_DELETION=${USER_PERMISSIONS_CHAT_DELETION}'
#     - 'ENABLE_MODEL_FILTER=${ENABLE_MODEL_FILTER}'
#     - 'MODEL_FILTER_LIST=${MODEL_FILTER_LIST}'
#     - 'WEBHOOK_URL=${WEBHOOK_URL}'
#     - 'ENABLE_ADMIN_EXPORT=${ENABLE_ADMIN_EXPORT}'
#     - 'WEBUI_VERSION=${WEBUI_VERSION}'
#     - 'WEBUI_AUTH_TRUSTED_EMAIL_HEADER=${WEBUI_AUTH_TRUSTED_EMAIL_HEADER}'
      - 'WEBUI_SECRET_KEY=${WEBUI_SECRET_KEY}'
#     - 'USE_CUDA_DOCKER=${USE_CUDA_DOCKER}'
      - 'DATABASE_URL=${DATABASE_URL}'
#     - 'PORT=${PORT}'
### Ollama ###
      - 'OLLAMA_BASE_URL=${OLLAMA_BASE_URL}'
#     - 'OLLAMA_BASE_URLS=${OLLAMA_BASE_URLS}'
#     - 'K8S_FLAG=${K8S_FLAG}'
#     - 'USE_OLLAMA_DOCKER=${USE_OLLAMA_DOCKER}'
#     - 'OLLAMA_API_BASE_URL=${OLLAMA_API_BASE_URL}'
### OpenAI ###
#     - 'OPENAI_API_KEY=${OPENAI_API_KEY}'
#     - 'OPENAI_API_BASE_URL=${OPENAI_API_BASE_URL}'
#     - 'OPENAI_API_BASE_URLS=${OPENAI_API_BASE_URLS}'
#     - 'OPENAI_API_KEYS=${OPENAI_API_KEYS}'
### RAG ###
#     - 'DOCS_DIR=${DOCS_DIR}'
#     - 'CHROMA_TENANT=${CHROMA_TENANT}'
#     - 'CHROMA_DATABASE=${CHROMA_DATABASE}'
      - 'CHROMA_HTTP_HOST=${CHROMA_HTTP_HOST}'
#     - 'CHROMA_HTTP_PORT=${CHROMA_HTTP_PORT}'
#     - 'CHROMA_HTTP_HEADERS=${CHROMA_HTTP_HEADERS}'
#     - 'CHROMA_HTTP_SSL=${CHROMA_HTTP_SSL}'
#     - 'RAG_TOP_K=${RAG_TOP_K}'
#     - 'RAG_RELEVANCE_THRESHOLD=${RAG_RELEVANCE_THRESHOLD}'
#     - 'ENABLE_RAG_HYBRID_SEARCH=${ENABLE_RAG_HYBRID_SEARCH}'
#     - 'ENABLE_RAG_WEB_LOADER_SSL_VERIFICATION=${ENABLE_RAG_WEB_LOADER_SSL_VERIFICATION}'
#     - 'RAG_EMBEDDING_ENGINE=${RAG_EMBEDDING_ENGINE}'
#     - 'PDF_EXTRACT_IMAGES=${PDF_EXTRACT_IMAGES}'
#     - 'RAG_EMBEDDING_MODEL=${RAG_EMBEDDING_MODEL}'
#     - 'RAG_EMBEDDING_MODEL_AUTO_UPDATE=${RAG_EMBEDDING_MODEL_AUTO_UPDATE}'
#     - 'RAG_EMBEDDING_MODEL_TRUST_REMOTE_CODE=${RAG_EMBEDDING_MODEL_TRUST_REMOTE_CODE}'
#     - 'RAG_TEMPLATE=${RAG_TEMPLATE}'
#     - 'CHUNK_SIZE=${CHUNK_SIZE}'
#     - 'CHUNK_OVERLAP=${CHUNK_OVERLAP}'
### Speech to Text ###
#     - 'WHISPER_MODEL=${WHISPER_MODEL}'
#     - 'WHISPER_MODEL_DIR=${WHISPER_MODEL_DIR}'
#     - 'WHISPER_MODEL_AUTO_UPDATE=${WHISPER_MODEL_AUTO_UPDATE}'
### Text to Speech ###
#     - 'AUDIO_OPENAI_API_BASE_URL=${AUDIO_OPENAI_API_BASE_URL}'
#     - 'AUDIO_OPENAI_API_KEY=${AUDIO_OPENAI_API_KEY}'
### Image Generation ###
#     - 'ENABLE_IMAGE_GENERATION=${ENABLE_IMAGE_GENERATION}'
#     - 'IMAGE_GENERATION_ENGINE=${IMAGE_GENERATION_ENGINE}'
#     - 'AUTOMATIC1111_BASE_URL=${AUTOMATIC1111_BASE_URL}'
#     - 'COMFYUI_BASE_URL=${COMFYUI_BASE_URL}'
#     - 'IMAGES_OPENAI_API_KEY=${IMAGES_OPENAI_API_KEY}'
#     - 'IMAGES_OPENAI_API_BASE_URL=${IMAGES_OPENAI_API_BASE_URL}'
#     - 'IMAGE_SIZE=${IMAGE_SIZE}'
#     - 'IMAGE_STEPS=${IMAGE_STEPS}'
#     - 'IMAGE_GENERATION_MODEL=${IMAGE_GENERATION_MODEL}'
### LiteLLM ###
#     - 'ENABLE_LITELLM=${ENABLE_LITELLM}'
#     - 'LITELLM_PROXY_PORT=${LITELLM_PROXY_PORT}'
#     - 'LITELLM_PROXY_HOST=${LITELLM_PROXY_HOST}'

### ChromaDB ###
  chromadb:
    image: docker.io/chromadb/chroma:latest
    container_name: openwebui-chromadb
    environment:
      - 'ALLOW_RESET=${ALLOW_RESET}'
      - 'ANONYMIZED_TELEMETRY=${ANONYMIZED_TELEMETRY}'
      - 'CHROMA_ROOT_PASSWORD=${CHROMA_ROOT_PASSWORD}'
      - 'CHROMA_DATABASE=${CHROMA_DATABASE}'
      - 'CHROMA_HTTP_HOST=${CHROMA_HTTP_HOST}'
    ports:
      - "3308:3306"
    volumes:
      - ./.openwebui-data/.data-chroma:/chroma/chroma
      - ./.openwebui-data/.data-chroma:/app/data      

### Postgres : SQL Database ###
  postgres:
    container_name: openwebui-postgres
    image: docker.io/postgres:latest
    environment: 
      - 'POSTGRES_PASSWORD=${POSTGRES_PASSWORD}'
      - 'POSTGRES_PORT=${POSTGRES_PORT}'
      - 'POSTGRES_DB=${POSTGRES_DATABASE}'
      - 'POSTGRES_USER=${POSTGRES_USER}'
      - 'POSTGRES_PASSWORD=${POSTGRES_PASSWORD}'
      
### If you need to change the port, change 5433 ###       
    ports: 
      - "5333:5432"
    restart: unless-stopped
### This is local. To switch to Docker Volume remove ./. ###
### Your data will not copy over unless you use Docker cp commands ###      
    volumes:
      - ./.openwebui-data/.data-postgres:/var/lib/postgresql/data

### GUI : PostgreSQL | MySQL and other Databases ###
  openwebui-adminer:
    image: adminer
    container_name: openwebui-adminer 
### If you need to change the port, change 8081 ###
    environment:
#      - 'ADMINER_DEFAULT_SERVER=postgres'
      - 'ADMINER_DESIGN=hydra'   
    ports:
      - 8333:8080
    restart: unless-stopped     

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: openwebui-pgadmin
    environment:
      - 'PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}'
      - 'PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}'
#     - 'PGADMIN_LISTEN_ADDRESSES=${PGADMIN_LISTEN_ADDRESSES}'
    ports:
      - "5555:80"
    volumes:
      - ./.openwebui-data/.data-pgadmin:/var/lib/postgresql/data
      - ./.openwebui-data/.data-pgadmin:/var/lib/pgadmin

### Volumes : These are stored locally ###
### If changing the Volumes above to use Docker Volumes ###
### You must remove the {} from the ones listed below ###
volumes:
  .openwebui-data: {}
  .data-chroma: {}
  .data-pgadmin: {}
  .data-postgres: {}
