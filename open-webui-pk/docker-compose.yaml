# Open-WebUI-Dev-Cuda | https://github.com/open-webui/open-webui
# Postgres | https://www.postgresql.org/
# ChromaDB | https://docs.trychroma.com/
# Searxng | https://github.com/searxng/searxng
# Watchtower | https://containrrr.dev/watchtower/

services:
  watchtower:
    image: containrrr/watchtower
    container_name: open-webui-watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      WATCHTOWER_POLL_INTERVAL: 600
      WATCHTOWER_CLEANUP: true
      WATCHTOWER_REMOVE_VOLUMES: true
    command: open-webui-dev-cuda
    restart: always
    
  open-webui-dev-cuda:
    image: ghcr.io/open-webui/open-webui:dev-cuda
    container_name: open-webui-dev-cuda
    ports:
      - "3000:8080"
    volumes:
      - ./.open-webui-data:/app/backend/data
      - ./.open-webui-data/config.json:/app/backend/data/config.json  
      - ./.open-webui-data/litellm/config.yaml:/app/backend/data/litellm/config.yaml       
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities:
                - gpu      
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - postgres
      - chromadb
    environment:
      - 'SCARF_NO_ANALYTICS=${SCARF_NO_ANALYTICS}'
      - 'DO_NOT_TRACK=${DO_NOT_TRACK}'
      - 'ANONYMIZED_TELEMETRY=${ANONYMIZED_TELEMETRY}'
      - 'LITELLM_LOCAL_MODEL_COST_MAP=${LITELLM_LOCAL_MODEL_COST_MAP}'
      - 'WEBUI_SECRET_KEY=${WEBUI_SECRET_KEY}'
      - 'DATABASE_URL=${DATABASE_URL}'
      - 'OLLAMA_BASE_URL=${OLLAMA_BASE_URL}'
      - 'CHROMA_HTTP_HOST=${CHROMA_HTTP_HOST}'
      - 'RAG_EMBEDDING_MODEL_AUTO_UPDATE=${RAG_EMBEDDING_MODEL_AUTO_UPDATE}'
      - 'RAG_WEB_SEARCH_RESULT_COUNT=${RAG_WEB_SEARCH_RESULT_COUNT}'
      - 'RAG_WEB_SEARCH_CONCURRENT_REQUESTS=${RAG_WEB_SEARCH_CONCURRENT_REQUESTS}'
      - 'SEARXNG_QUERY_URL=${SEARXNG_QUERY_URL}'
      - 'USE_CUDA_DOCKER=${USE_CUDA_DOCKER}'
    restart: always
    
  chromadb:
    image: docker.io/chromadb/chroma:latest
    container_name: open-webui-chromadb
    environment:
      - 'ALLOW_RESET=${ALLOW_RESET}'
      - 'ANONYMIZED_TELEMETRY=${ANONYMIZED_TELEMETRY}'
      - 'CHROMA_ROOT_PASSWORD=${CHROMA_ROOT_PASSWORD}'
      - 'CHROMA_DATABASE=${CHROMA_DATABASE}'
      - 'CHROMA_HTTP_HOST=${CHROMA_HTTP_HOST}'
    ports:
      - "3308:3306"
    volumes:
      - ./.open-webui-data/.data-chroma:/chroma/chroma
      - ./.open-webui-data/.data-chroma:/app/data
    restart: always   

  postgres:
    container_name: open-webui-postgres
    image: docker.io/postgres:latest
    environment: 
      - 'POSTGRES_PASSWORD=${POSTGRES_PASSWORD}'
      - 'POSTGRES_PORT=${POSTGRES_PORT}'
      - 'POSTGRES_DB=${POSTGRES_DATABASE}'
      - 'POSTGRES_USER=${POSTGRES_USER}'
      - 'POSTGRES_PASSWORD=${POSTGRES_PASSWORD}'
    ports: 
      - "5333:5432"
    volumes:
      - ./.open-webui-data/.data-postgres:/var/lib/postgresql/data
    restart: unless-stopped

  searxng:
    image: searxng/searxng:latest
    container_name: open-webui-searxng
    ports:
      - "8787:8080"
    volumes:
      - ./.searxng-data:/etc/searxng
    restart: always
